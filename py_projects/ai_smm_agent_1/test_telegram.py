#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ SMM AI Agent

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å Telegram –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ API.
"""

import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from app.models.content import PostCreate
from app.models.product import PlatformType
from app.services.social.platforms import TelegramService
from app.services.social.manager import SocialMediaManager


async def test_telegram_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    channel_id = os.getenv("TELEGRAM_CHANNEL_ID")
    
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("   –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞")
        return False
    
    if not channel_id:
        print("‚ùå TELEGRAM_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("   –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: TELEGRAM_CHANNEL_ID=–≤–∞—à_id_–∫–∞–Ω–∞–ª–∞")
        return False
    
    print(f"‚úÖ TELEGRAM_BOT_TOKEN: {'*' * 10}{bot_token[-4:]}")
    print(f"‚úÖ TELEGRAM_CHANNEL_ID: {channel_id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    telegram_service = TelegramService()
    is_connected = await telegram_service.connect()
    
    if is_connected:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram")
        return False


async def test_telegram_posting():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    test_post = PostCreate(
        text="ü§ñ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç SMM AI Agent!\n\n–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã. #SMM #AI #–¢–µ—Å—Ç",
        hashtags=["#SMM", "#AI", "#–¢–µ—Å—Ç", "#–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
        platforms=[PlatformType.TELEGRAM],
        product_id=1,
        scheduled_time=None
    )
    
    # –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç
    telegram_service = TelegramService()
    result = await telegram_service.publish_post(test_post)
    
    print(f"üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    print(f"   Post ID: {result.get('post_id', 'N/A')}")
    print(f"   URL: {result.get('url', 'N/A')}")
    print(f"   Platform: {result.get('platform', 'N/A')}")
    
    return result


async def test_telegram_analytics():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ Telegram...")
    
    telegram_service = TelegramService()
    analytics = await telegram_service.get_post_analytics("test_post_id")
    
    print(f"üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–∞:")
    print(f"   –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {analytics.get('views', 'N/A')}")
    print(f"   –ü–µ—Ä–µ—Å—ã–ª–∫–∏: {analytics.get('forwards', 'N/A')}")
    print(f"   –†–µ–∞–∫—Ü–∏–∏: {analytics.get('reactions', 'N/A')}")
    
    return analytics


async def test_telegram_via_manager():
    """–¢–µ—Å—Ç —á–µ—Ä–µ–∑ SocialMediaManager"""
    print("\nüéõÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SocialMediaManager...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    test_post = PostCreate(
        text="üéØ –í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä!\n\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏. #–¢–µ—Å—Ç #–ú–µ–Ω–µ–¥–∂–µ—Ä",
        hashtags=["#–¢–µ—Å—Ç", "#–ú–µ–Ω–µ–¥–∂–µ—Ä", "#SMM"],
        platforms=[PlatformType.TELEGRAM],
        product_id=1,
        scheduled_time=None
    )
    
    # –ü—É–±–ª–∏–∫—É–µ–º —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = SocialMediaManager()
    results = await manager.publish_post(test_post, [PlatformType.TELEGRAM])
    
    print(f"üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä:")
    for platform, result in results.items():
        status = "‚úÖ –£—Å–ø–µ—à–Ω–æ" if result.get('success') else "‚ùå –û—à–∏–±–∫–∞"
        print(f"   {platform}: {status}")
        if result.get('error'):
            print(f"      –û—à–∏–±–∫–∞: {result['error']}")
        if result.get('url'):
            print(f"      URL: {result['url']}")
    
    return results


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ SMM AI Agent")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connection_ok = await test_telegram_connection()
    
    if not connection_ok:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    await test_telegram_posting()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    await test_telegram_analytics()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä
    await test_telegram_via_manager()
    
    print("\n" + "=" * 60)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("   python example_usage.py")
    print("\nüåê –î–ª—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞:")
    print("   python run.py")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    asyncio.run(main())
