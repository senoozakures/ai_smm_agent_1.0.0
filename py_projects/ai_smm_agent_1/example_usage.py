#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SMM AI Agent

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ AI-–∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π.
"""

import asyncio
from datetime import datetime

from app.models.product import ProductCreate, Product, PlatformType, ContentType
from app.models.content import ContentGenerationRequest
from app.services.content.generator import ContentGenerator
from app.services.social.manager import SocialMediaManager


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    print("üöÄ SMM AI Agent - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞/—É—Å–ª—É–≥–∏...")
    product_data = ProductCreate(
        name="–û–Ω–ª–∞–π–Ω –∫—É—Ä—Å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é Python",
        description="–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å –Ω—É–ª—è –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
        target_audience="–°—Ç—É–¥–µ–Ω—Ç—ã 18-25 –ª–µ—Ç, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã",
        platforms=[PlatformType.INSTAGRAM, PlatformType.FACEBOOK, PlatformType.TELEGRAM],
        price=299.99,
        category="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
        keywords=["python", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∫—É—Ä—Å", "–æ–±—É—á–µ–Ω–∏–µ", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"]
    )
    
    print(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω: {product_data.name}")
    
    # 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    print("\n2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    product = Product(
        id=1,
        name=product_data.name,
        description=product_data.description,
        target_audience=product_data.target_audience,
        platforms=product_data.platforms,
        price=product_data.price,
        category=product_data.category,
        keywords=product_data.keywords,
        created_at=datetime.now(),
        updated_at=datetime.now()
    )
    
    generator = ContentGenerator()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã
    print("   –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤...")
    posts = await generator.generate_posts(product, count=3, tone="friendly")
    
    for i, post in enumerate(posts, 1):
        print(f"   –ü–æ—Å—Ç {i}: {post.text[:100]}...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö–µ—à—Ç–µ–≥–∏
    print("   –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö–µ—à—Ç–µ–≥–æ–≤...")
    hashtags = await generator.generate_hashtags(
        {
            "name": product.name,
            "description": product.description,
            "category": product.category
        },
        count=5
    )
    print(f"   –•–µ—à—Ç–µ–≥–∏: {', '.join(hashtags)}")
    
    # 3. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
    print("\n3. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π...")
    
    social_manager = SocialMediaManager()
    
    # –ü—É–±–ª–∏–∫—É–µ–º –æ–¥–∏–Ω –ø–æ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    if posts:
        print("   –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞...")
        result = await social_manager.publish_post(posts[0], [PlatformType.INSTAGRAM])
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    # 4. –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    print("\n4. –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    if posts:
        analysis = await generator.analyze_content_effectiveness(posts[0])
        print(f"   –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {analysis.get('score', 'N/A')}/10")
    
    # 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    print("\n5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    calendar = await generator.generate_content_calendar(product, days=7, posts_per_day=1)
    print(f"   –°–æ–∑–¥–∞–Ω –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ {len(calendar)} –¥–Ω–µ–π")
    
    # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º...")
    
    platforms = social_manager.get_supported_platforms()
    for platform in platforms:
        is_connected = await social_manager.test_connection(platform)
        status = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ" if is_connected else "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ"
        print(f"   {platform.value}: {status}")
    
    print("\n" + "=" * 50)
    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("uvicorn app.main:app --reload")
    print("\n–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:")
    print("http://localhost:8000/docs")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    asyncio.run(main())
